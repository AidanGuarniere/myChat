import React, { useState, useEffect } from "react";
import Head from "next/head";
import Dashboard from "../components/Dashboard";
import Dialogue from "../components/Dialogue";
import axios from "axios";
import { useSession } from "next-auth/react";
import { useRouter } from "next/router";

export default function Home() {
  const [chats, setChats] = useState([]);
  const [selectedChat, setSelectedChat] = useState(null);
  const [userText, setUserText] = useState("");
  const [error, setError] = useState(null);
  const { data: session, status } = useSession();
  const router = useRouter();

  useEffect(() => {
    if (status === "unauthenticated") {
      router.push("/auth");
    } else if (session && status === "authenticated") {
      const fetchChats = async () => {
        try {
          const response = await axios.get("/api/chats");
          if (response.data) {
            setChats(response.data);
          }
        } catch (error) {
          setError(error);
          console.error("Error fetching chats:", error);
        }
      };

      fetchChats();
    }
  }, [session, status, router]);

  useEffect(() => {
    if(error !==null){
    console.error(error);}
  }, [error]);

  useEffect(() => {
    setUserText("")
  }, [selectedChat])
  
  return (
    <>
      <Head>
        <title>myGPT</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative h-full w-full transition-width flex flex-col overflow-hidden items-stretch flex-1">
        <div className="w-screen h-screen mx-auto overflow-hidden bg-white p-0">
          {status === "authenticated" && (
            <div className="flex overflow-x-hidden items-bottom">
              <Dashboard
                chats={chats}
                userText={userText}
                setUserText={setUserText}
                setChats={setChats}
                setError={setError}
                selectedChat={selectedChat}
                setSelectedChat={setSelectedChat}
              />

              <Dialogue
                session={session}
                userText={userText}
                setUserText={setUserText}
                error={error}
                setError={setError}
                chats={chats}
                setChats={setChats}
                selectedChat={selectedChat}
                setSelectedChat={setSelectedChat}
              />
            </div>
          )}
        </div>
      </main>
    </>
  );
}
