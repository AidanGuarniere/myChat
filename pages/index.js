import React, { useState, useEffect } from "react";
import Head from "next/head";
import ChatHistory from "../components/ChatHistory";
import Chats from "../components/Chats";
import ErrorDisplay from "../components/ErrorDisplay";
import axios from "axios";

export default function Home() {
  const [chats, setChats] = useState([]);
  const [selectedChat, setSelectedChat] = useState(null);
  const [userText, setUserText] = useState("");
  const [error, setError] = useState(null);

  // Fetch chats from the server instead of local storage
  useEffect(() => {
    const fetchChats = async () => {
      try {
        const response = await axios.get("/api/chats");
        if (response.data) {
          setChats(response.data);
          const previouslySelectedChat = localStorage.getItem("selectedChat");
          if (previouslySelectedChat) {
            setSelectedChat(previouslySelectedChat);
          }
        }
      } catch (error) {
        setError(error);
        console.error("Error fetching chats:", error);
      }
    };

    fetchChats();
  }, []);

  useEffect(() => {
    console.log(error)

  }, [error])
  
  return (
    <>
      <Head>
        <title>myGPT</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="relative h-full w-full transition-width flex flex-col overflow-hidden items-stretch flex-1">
        <div className="w-screen h-screen mx-auto overflow-hidden bg-white p-0">
          <div className="flex overflow-x-hidden items-bottom">
            <ChatHistory
              chats={chats}
              userText={userText}
              setUserText={setUserText}
              setChats={setChats}
              setError={setError}
              selectedChat={selectedChat}
              setSelectedChat={setSelectedChat}
            />

            <Chats
              userText={userText}
              setUserText={setUserText}
              error={error}
              setError={setError}
              chats={chats}
              setChats={setChats}
              selectedChat={selectedChat}
              setSelectedChat={setSelectedChat}
            />
          </div>
        </div>{" "}
      </main>
    </>
  );
}
